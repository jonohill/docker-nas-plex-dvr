name: build docker image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_REPO: ghcr.io/hillnz/docker-nas-plex-dvr

jobs:

  build_x64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max          
          tags: "${{ env.DOCKER_REPO }}/linux/amd64:${{ github.run_number }}"

  build_arm64:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max          
          tags: "${{ env.DOCKER_REPO }}/linux/arm64:${{ github.run_number }}"

  build_final:
    runs-on: ubuntu-latest

    needs: [build_x64, build_arm64]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare dockerfile
        run: |
          echo "FROM ${{ env.DOCKER_REPO }}/\${TARGETPLATFORM}:${{ github.run_number }}" >Dockerfile.multi

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.multi
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: "${{ env.DOCKER_REPO }}:${{ github.run_number }}"
